{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","filteredTodos","setSelectedTodoId","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filter","setFilter","setQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","todos","React","useState","user","setUser","useEffect","loadUser","a","userId","userFromServer","href","name","App","setTodos","setFilteredTodos","loadTodos","todosFromServer","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e6b1fe97.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  filteredTodos: Todo[];\n  setSelectedTodoId: (id: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props>\n  = ({\n    filteredTodos,\n    setSelectedTodoId,\n    selectedTodoId,\n  }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {filteredTodos.map((todo) => (\n          <tr\n            data-cy=\"todo\"\n            className={classNames(\n              { 'has-background-info-light': selectedTodoId === todo.id },\n            )}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                { 'has-text-success': todo.completed },\n                { 'has-text-danger': !todo.completed },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodoId(todo.id)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': todo.id !== selectedTodoId },\n                    { 'fa-eye-slash': todo.id === selectedTodoId },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n","type Props = {\n  setFilter: (filter: string) => void;\n  filter: string;\n  setQuery: (query: string) => void;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props>\n  = ({\n    filter,\n    setFilter,\n    setQuery,\n    query,\n  }) => {\n    return (\n      <form className=\"field has-addons\">\n        <p className=\"control\">\n          <span className=\"select\">\n            <select\n              data-cy=\"statusSelect\"\n              value={filter}\n              onChange={(event) => setFilter(event.target.value)}\n            >\n              <option value=\"all\">All</option>\n              <option value=\"active\">Active</option>\n              <option value=\"completed\">Completed</option>\n            </select>\n          </span>\n        </p>\n\n        <p className=\"control is-expanded has-icons-left has-icons-right\">\n          <input\n            value={query}\n            data-cy=\"searchInput\"\n            type=\"text\"\n            className=\"input\"\n            placeholder=\"Search...\"\n            onChange={(event) => setQuery(event.target.value)}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-magnifying-glass\" />\n          </span>\n\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        </p>\n      </form>\n    );\n  };\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodoId: number;\n  setSelectedTodoId: (id: number) => void;\n};\n\nexport const TodoModal: React.FC<Props>\n  = ({\n    todos,\n    selectedTodoId,\n    setSelectedTodoId,\n  }) => {\n    const [user, setUser] = React.useState<User | null>(null);\n\n    React.useEffect(() => {\n      const loadUser = async () => {\n        const userFromServer = await getUser(todos[selectedTodoId - 1].userId);\n\n        setUser(userFromServer);\n      };\n\n      loadUser();\n    }, [selectedTodoId]);\n\n    return (\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {!user ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${selectedTodoId}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setSelectedTodoId(-1)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todos[selectedTodoId - 1].title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {/* <strong className=\"has-text-success\">Done</strong> */}\n                <strong className=\"has-text-danger\">Planned</strong>\n\n                {' by '}\n\n                <a href=\"mailto:Sincere@april.biz\">\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n","/* eslint-disable max-len */\nimport { useState, useEffect } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number>(-1);\n  const [filter, setFilter] = useState<string>('all');\n  const [query, setQuery] = useState<string>('');\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    };\n\n    loadTodos();\n  }, []);\n\n  useEffect(() => {\n    setFilteredTodos(todos.filter(todo => {\n      switch (filter) {\n        case 'active':\n          return !todo.completed;\n\n        case 'completed':\n          return todo.completed;\n\n        default:\n          return true;\n      }\n    }).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase())\n    || todo.id === +query));\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                filter={filter}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  filteredTodos={filteredTodos}\n                  setSelectedTodoId={setSelectedTodoId}\n                  selectedTodoId={selectedTodoId}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodoId !== -1 && (\n        <TodoModal\n          todos={todos}\n          selectedTodoId={selectedTodoId}\n          setSelectedTodoId={setSelectedTodoId}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}